# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T13:40:19+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Field, RootModel, constr


class BadRequestException(RootModel[Any]):
    root: Any


class Body(RootModel[str]):
    root: str


class CodeGenerationStatus(Enum):
    CREATE_IN_PROGRESS = 'CREATE_IN_PROGRESS'
    CREATE_COMPLETE = 'CREATE_COMPLETE'
    CREATE_FAILED = 'CREATE_FAILED'


class ConflictException(RootModel[Any]):
    root: Any


class DeleteDiscovererRequest(BaseModel):
    pass


class DeleteRegistryRequest(BaseModel):
    pass


class DeleteResourcePolicyRequest(BaseModel):
    pass


class DeleteSchemaRequest(BaseModel):
    pass


class DeleteSchemaVersionRequest(BaseModel):
    pass


class DescribeCodeBindingRequest(BaseModel):
    pass


class DescribeDiscovererRequest(BaseModel):
    pass


class DescribeRegistryRequest(BaseModel):
    pass


class DescribeSchemaRequest(BaseModel):
    pass


class DiscovererState(Enum):
    STARTED = 'STARTED'
    STOPPED = 'STOPPED'


class ExportSchemaRequest(BaseModel):
    pass


class ForbiddenException(RootModel[Any]):
    root: Any


class GetCodeBindingSourceRequest(BaseModel):
    pass


class GetCodeBindingSourceResponse(BaseModel):
    Body_1: Optional[Body] = Field(None, alias='Body')


class GetDiscoveredSchemaVersionItemInput(
    RootModel[constr(min_length=1, max_length=100000)]
):
    root: constr(min_length=1, max_length=100000)


class GetResourcePolicyRequest(BaseModel):
    pass


class GoneException(RootModel[Any]):
    root: Any


class InternalServerErrorException(RootModel[Any]):
    root: Any


class ListDiscoverersRequest(BaseModel):
    pass


class ListRegistriesRequest(BaseModel):
    pass


class ListSchemaVersionsRequest(BaseModel):
    pass


class ListSchemasRequest(BaseModel):
    pass


class ListTagsForResourceRequest(BaseModel):
    pass


class NotFoundException(RootModel[Any]):
    root: Any


class PreconditionFailedException(RootModel[Any]):
    root: Any


class PutCodeBindingRequest(BaseModel):
    pass


class SearchSchemasRequest(BaseModel):
    pass


class ServiceUnavailableException(RootModel[Any]):
    root: Any


class StartDiscovererRequest(BaseModel):
    pass


class StopDiscovererRequest(BaseModel):
    pass


class TooManyRequestsException(RootModel[Any]):
    root: Any


class Type(Enum):
    OpenApi3 = 'OpenApi3'
    JSONSchemaDraft4 = 'JSONSchemaDraft4'


class UnauthorizedException(RootModel[Any]):
    root: Any


class UntagResourceRequest(BaseModel):
    pass


class FieldBoolean(RootModel[bool]):
    root: bool


class FieldInteger(RootModel[int]):
    root: int


class FieldListOfGetDiscoveredSchemaVersionItemInput(
    RootModel[List[GetDiscoveredSchemaVersionItemInput]]
):
    root: List[GetDiscoveredSchemaVersionItemInput] = Field(
        ..., max_length=10, min_length=1
    )


class FieldLong(RootModel[int]):
    root: int


class FieldString(RootModel[str]):
    root: str


class FieldStringMin0Max256(RootModel[constr(min_length=0, max_length=256)]):
    root: constr(min_length=0, max_length=256)


class FieldStringMin0Max36(RootModel[constr(min_length=0, max_length=36)]):
    root: constr(min_length=0, max_length=36)


class FieldStringMin1Max100000(RootModel[constr(min_length=1, max_length=100000)]):
    root: constr(min_length=1, max_length=100000)


class FieldStringMin20Max1600(RootModel[constr(min_length=20, max_length=1600)]):
    root: constr(min_length=20, max_length=1600)


class FieldTimestampIso8601(RootModel[datetime]):
    root: datetime


class TagsResourceArnPostRequest(BaseModel):
    tags: Dict[str, FieldString] = Field(
        ..., description='Key-value pairs associated with a resource.'
    )


class TagKeys(RootModel[List[FieldString]]):
    root: List[FieldString]


class V1DiscoverPostRequest(BaseModel):
    Events: List[GetDiscoveredSchemaVersionItemInput] = Field(
        ...,
        description='An array of strings where each string is a JSON event. These are the events that were used to generate the schema. The array includes a single type of event and has a maximum size of 10 events.',
        max_length=10,
        min_length=1,
    )
    Type_1: Type = Field(..., alias='Type', description='The type of event.')


class V1DiscoverersPostRequest(BaseModel):
    CrossAccount: Optional[bool] = Field(
        None,
        description='Support discovery of schemas in events sent to the bus from another account. (default: true).',
    )
    Description: Optional[constr(min_length=0, max_length=256)] = Field(
        None, description='A description for the discoverer.'
    )
    SourceArn: constr(min_length=20, max_length=1600) = Field(
        ..., description='The ARN of the event bus.'
    )
    tags: Optional[Dict[str, FieldString]] = Field(
        None, description='Key-value pairs associated with a resource.'
    )


class V1DiscoverersIdDiscovererIdPutRequest(BaseModel):
    CrossAccount: Optional[bool] = Field(
        None,
        description='Support discovery of schemas in events sent to the bus from another account. (default: true)',
    )
    Description: Optional[constr(min_length=0, max_length=256)] = Field(
        None, description='The description of the discoverer to update.'
    )


class V1PolicyPutRequest(BaseModel):
    Policy: str = Field(..., description='The resource-based policy.')
    RevisionId: Optional[str] = Field(
        None, description='The revision ID of the policy.'
    )


class V1RegistriesNameRegistryNamePostRequest(BaseModel):
    Description: Optional[constr(min_length=0, max_length=256)] = Field(
        None, description='A description of the registry to be created.'
    )
    tags: Optional[Dict[str, FieldString]] = Field(
        None, description='Key-value pairs associated with a resource.'
    )


class V1RegistriesNameRegistryNamePutRequest(BaseModel):
    Description: Optional[constr(min_length=0, max_length=256)] = Field(
        None, description='The description of the registry to update.'
    )


class V1RegistriesNameRegistryNameSchemasNameSchemaNamePostRequest(BaseModel):
    Content: constr(min_length=1, max_length=100000) = Field(
        ..., description='The source of the schema definition.'
    )
    Description: Optional[constr(min_length=0, max_length=256)] = Field(
        None, description='A description of the schema.'
    )
    Type_1: Type = Field(..., alias='Type', description='The type of schema.')
    tags: Optional[Dict[str, FieldString]] = Field(
        None, description='Key-value pairs associated with a resource.'
    )


class V1RegistriesNameRegistryNameSchemasNameSchemaNamePutRequest(BaseModel):
    ClientTokenId: Optional[constr(min_length=0, max_length=36)] = Field(
        None, description='The ID of the client token.'
    )
    Content: Optional[constr(min_length=1, max_length=100000)] = Field(
        None, description='The source of the schema definition.'
    )
    Description: Optional[constr(min_length=0, max_length=256)] = Field(
        None, description='The description of the schema.'
    )
    Type_1: Optional[Type] = Field(
        None, alias='Type', description='The schema type for the events schema.'
    )


class DescribeCodeBindingResponse(BaseModel):
    CreationDate: Optional[FieldTimestampIso8601] = None
    LastModified: Optional[FieldTimestampIso8601] = None
    SchemaVersion: Optional[FieldString] = None
    Status: Optional[CodeGenerationStatus] = None


class ExportSchemaResponse(BaseModel):
    Content: Optional[FieldString] = None
    SchemaArn: Optional[FieldString] = None
    SchemaName: Optional[FieldString] = None
    SchemaVersion: Optional[FieldString] = None
    Type: Optional[FieldString] = None


class GetDiscoveredSchemaRequest(BaseModel):
    Events: FieldListOfGetDiscoveredSchemaVersionItemInput
    Type_1: Type = Field(..., alias='Type')


class GetDiscoveredSchemaResponse(BaseModel):
    Content: Optional[FieldString] = None


class GetResourcePolicyResponse(BaseModel):
    Policy: Optional[FieldString] = None
    RevisionId: Optional[FieldString] = None


class PutCodeBindingResponse(BaseModel):
    CreationDate: Optional[FieldTimestampIso8601] = None
    LastModified: Optional[FieldTimestampIso8601] = None
    SchemaVersion: Optional[FieldString] = None
    Status: Optional[CodeGenerationStatus] = None


class PutResourcePolicyRequest(BaseModel):
    Policy: FieldString
    RevisionId: Optional[FieldString] = None


class PutResourcePolicyResponse(BaseModel):
    Policy: Optional[FieldString] = None
    RevisionId: Optional[FieldString] = None


class SchemaVersionSummary(BaseModel):
    SchemaArn: Optional[FieldString] = None
    SchemaName: Optional[FieldString] = None
    SchemaVersion: Optional[FieldString] = None
    Type_1: Optional[Type] = Field(None, alias='Type')


class SearchSchemaVersionSummary(BaseModel):
    CreatedDate: Optional[FieldTimestampIso8601] = None
    SchemaVersion: Optional[FieldString] = None
    Type_1: Optional[Type] = Field(None, alias='Type')


class StartDiscovererResponse(BaseModel):
    DiscovererId: Optional[FieldString] = None
    State: Optional[DiscovererState] = None


class StopDiscovererResponse(BaseModel):
    DiscovererId: Optional[FieldString] = None
    State: Optional[DiscovererState] = None


class Tags(RootModel[Optional[Dict[str, FieldString]]]):
    root: Optional[Dict[str, FieldString]] = None


class UpdateDiscovererRequest(BaseModel):
    CrossAccount: Optional[FieldBoolean] = None
    Description: Optional[FieldStringMin0Max256] = None


class UpdateDiscovererResponse(BaseModel):
    CrossAccount: Optional[FieldBoolean] = None
    Description: Optional[FieldString] = None
    DiscovererArn: Optional[FieldString] = None
    DiscovererId: Optional[FieldString] = None
    SourceArn: Optional[FieldString] = None
    State: Optional[DiscovererState] = None
    Tags_1: Optional[Tags] = Field(None, alias='Tags')


class UpdateRegistryRequest(BaseModel):
    Description: Optional[FieldStringMin0Max256] = None


class UpdateRegistryResponse(BaseModel):
    Description: Optional[FieldString] = None
    RegistryArn: Optional[FieldString] = None
    RegistryName: Optional[FieldString] = None
    Tags_1: Optional[Tags] = Field(None, alias='Tags')


class UpdateSchemaRequest(BaseModel):
    ClientTokenId: Optional[FieldStringMin0Max36] = None
    Content: Optional[FieldStringMin1Max100000] = None
    Description: Optional[FieldStringMin0Max256] = None
    Type_1: Optional[Type] = Field(None, alias='Type')


class UpdateSchemaResponse(BaseModel):
    Description: Optional[FieldString] = None
    LastModified: Optional[FieldTimestampIso8601] = None
    SchemaArn: Optional[FieldString] = None
    SchemaName: Optional[FieldString] = None
    SchemaVersion: Optional[FieldString] = None
    Tags_1: Optional[Tags] = Field(None, alias='Tags')
    Type: Optional[FieldString] = None
    VersionCreatedDate: Optional[FieldTimestampIso8601] = None


class FieldListOfSchemaVersionSummary(RootModel[List[SchemaVersionSummary]]):
    root: List[SchemaVersionSummary]


class FieldListOfSearchSchemaVersionSummary(
    RootModel[List[SearchSchemaVersionSummary]]
):
    root: List[SearchSchemaVersionSummary]


class FieldListOfString(RootModel[List[FieldString]]):
    root: List[FieldString]


class CreateDiscovererRequest(BaseModel):
    CrossAccount: Optional[FieldBoolean] = None
    Description: Optional[FieldStringMin0Max256] = None
    SourceArn: FieldStringMin20Max1600
    Tags_1: Optional[Tags] = Field(None, alias='Tags')


class CreateDiscovererResponse(BaseModel):
    CrossAccount: Optional[FieldBoolean] = None
    Description: Optional[FieldString] = None
    DiscovererArn: Optional[FieldString] = None
    DiscovererId: Optional[FieldString] = None
    SourceArn: Optional[FieldString] = None
    State: Optional[DiscovererState] = None
    Tags_1: Optional[Tags] = Field(None, alias='Tags')


class CreateRegistryRequest(BaseModel):
    Description: Optional[FieldStringMin0Max256] = None
    Tags_1: Optional[Tags] = Field(None, alias='Tags')


class CreateRegistryResponse(BaseModel):
    Description: Optional[FieldString] = None
    RegistryArn: Optional[FieldString] = None
    RegistryName: Optional[FieldString] = None
    Tags_1: Optional[Tags] = Field(None, alias='Tags')


class CreateSchemaRequest(BaseModel):
    Content: FieldStringMin1Max100000
    Description: Optional[FieldStringMin0Max256] = None
    Tags_1: Optional[Tags] = Field(None, alias='Tags')
    Type_1: Type = Field(..., alias='Type')


class CreateSchemaResponse(BaseModel):
    Description: Optional[FieldString] = None
    LastModified: Optional[FieldTimestampIso8601] = None
    SchemaArn: Optional[FieldString] = None
    SchemaName: Optional[FieldString] = None
    SchemaVersion: Optional[FieldString] = None
    Tags_1: Optional[Tags] = Field(None, alias='Tags')
    Type: Optional[FieldString] = None
    VersionCreatedDate: Optional[FieldTimestampIso8601] = None


class DescribeDiscovererResponse(BaseModel):
    CrossAccount: Optional[FieldBoolean] = None
    Description: Optional[FieldString] = None
    DiscovererArn: Optional[FieldString] = None
    DiscovererId: Optional[FieldString] = None
    SourceArn: Optional[FieldString] = None
    State: Optional[DiscovererState] = None
    Tags_1: Optional[Tags] = Field(None, alias='Tags')


class DescribeRegistryResponse(BaseModel):
    Description: Optional[FieldString] = None
    RegistryArn: Optional[FieldString] = None
    RegistryName: Optional[FieldString] = None
    Tags_1: Optional[Tags] = Field(None, alias='Tags')


class DescribeSchemaResponse(BaseModel):
    Content: Optional[FieldString] = None
    Description: Optional[FieldString] = None
    LastModified: Optional[FieldTimestampIso8601] = None
    SchemaArn: Optional[FieldString] = None
    SchemaName: Optional[FieldString] = None
    SchemaVersion: Optional[FieldString] = None
    Tags_1: Optional[Tags] = Field(None, alias='Tags')
    Type: Optional[FieldString] = None
    VersionCreatedDate: Optional[FieldTimestampIso8601] = None


class DiscovererSummary(BaseModel):
    CrossAccount: Optional[FieldBoolean] = None
    DiscovererArn: Optional[FieldString] = None
    DiscovererId: Optional[FieldString] = None
    SourceArn: Optional[FieldString] = None
    State: Optional[DiscovererState] = None
    Tags_1: Optional[Tags] = Field(None, alias='Tags')


class ListSchemaVersionsResponse(BaseModel):
    NextToken: Optional[FieldString] = None
    SchemaVersions: Optional[FieldListOfSchemaVersionSummary] = None


class ListTagsForResourceResponse(BaseModel):
    Tags_1: Optional[Tags] = Field(None, alias='Tags')


class RegistrySummary(BaseModel):
    RegistryArn: Optional[FieldString] = None
    RegistryName: Optional[FieldString] = None
    Tags_1: Optional[Tags] = Field(None, alias='Tags')


class SchemaSummary(BaseModel):
    LastModified: Optional[FieldTimestampIso8601] = None
    SchemaArn: Optional[FieldString] = None
    SchemaName: Optional[FieldString] = None
    Tags_1: Optional[Tags] = Field(None, alias='Tags')
    VersionCount: Optional[FieldLong] = None


class SearchSchemaSummary(BaseModel):
    RegistryName: Optional[FieldString] = None
    SchemaArn: Optional[FieldString] = None
    SchemaName: Optional[FieldString] = None
    SchemaVersions: Optional[FieldListOfSearchSchemaVersionSummary] = None


class TagResourceRequest(BaseModel):
    Tags_1: Tags = Field(..., alias='Tags')


class FieldListOfDiscovererSummary(RootModel[List[DiscovererSummary]]):
    root: List[DiscovererSummary]


class FieldListOfRegistrySummary(RootModel[List[RegistrySummary]]):
    root: List[RegistrySummary]


class FieldListOfSchemaSummary(RootModel[List[SchemaSummary]]):
    root: List[SchemaSummary]


class FieldListOfSearchSchemaSummary(RootModel[List[SearchSchemaSummary]]):
    root: List[SearchSchemaSummary]


class ListDiscoverersResponse(BaseModel):
    Discoverers: Optional[FieldListOfDiscovererSummary] = None
    NextToken: Optional[FieldString] = None


class ListRegistriesResponse(BaseModel):
    NextToken: Optional[FieldString] = None
    Registries: Optional[FieldListOfRegistrySummary] = None


class ListSchemasResponse(BaseModel):
    NextToken: Optional[FieldString] = None
    Schemas: Optional[FieldListOfSchemaSummary] = None


class SearchSchemasResponse(BaseModel):
    NextToken: Optional[FieldString] = None
    Schemas: Optional[FieldListOfSearchSchemaSummary] = None
